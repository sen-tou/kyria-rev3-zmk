/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF_L 0
#define SYM_L 1
#define NUM_L 2

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            // ------------------------------------------------------------------                                            ----------------------------------------------------------------------
            // |    ESC         |    Q    |    W    |    E     |    R     |    T     |                                            |    Y     |    U      |    I      |    O     |     P     |     \    |
            // ------------------------------------------------------------------                                            ----------------------------------------------------------------------
                &kp ESC          &kp Q     &kp W     &kp E      &kp R      &kp T                                                   &kp Y      &kp U       &kp I       &kp O      &kp P       &kp BSLH
            // ------------------------------------------------------------------                                            ----------------------------------------------------------------------
            // |    TAB         |    A    |    S    |    D     |    F     |    G     |                                            |    H     |    J      |    K      |    L     |     ;     |     '    |
            // ------------------------------------------------------------------                                            ----------------------------------------------------------------------
                &mt LSHIFT TAB  &kp A     &kp S     &kp D      &kp F      &kp G                                                   &kp H      &kp J       &kp K       &kp L      &kp SEMI    &kp SQT
            // -------------------------------------------------------------------------------------------  -------------------------------------------------------------------------------------------
            // |   CLCK        |    Z    |    X    |    C     |    V     |    B     |        |        |  |        |        |    N     |    M      |    ,      |    .     |     /     |   RET   |
            // ---------------------------------------------------------------------------------------  -------------------------------------------------------------------------------------------
                &mt LCTRL CLCK   &kp Z     &kp X     &kp C      &kp V      &kp B      &none      &none        &none     &none      &kp N      &kp M       &kp COMMA   &kp DOT    &kp FSLH    &kp RET
            //                                 -------------------------------------------------------  ---------------------------------------------------------
            //                                 |          |   GUI    |   DEL   |  RET   |   SYM_L   |  |   NUM_L   |  SPACE   |   BSPC   |   MENU     |          |
            //                                 -------------------------------------------------------  ---------------------------------------------------------
                                                &none      &kp LGUI    &mt ALT DEL  &mt LSHIFT RET  &mo SYM_L      &mo NUM_L   &kp SPACE  &mt RALT BSPC   &kp C_MENU     &none
            >;
        };
        symbol_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
            &trans &trans &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2              &trans &trans &trans &trans &trans &trans
            &trans &trans &trans     &bt BT_SEL 3 &bt BT_SEL 4 &trans                    &trans &trans &trans &trans &trans &trans
            &trans &trans &trans &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans &trans &trans &trans
                                 &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
            >;
        };
        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
            &trans &trans &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2              &trans &trans &trans &trans &trans &trans
            &trans &trans &trans     &bt BT_SEL 3 &bt BT_SEL 4 &trans                    &trans &trans &trans &trans &trans &trans
            &trans &trans &trans &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans &trans &trans &trans
                                 &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
            >;
        };
    };
};
