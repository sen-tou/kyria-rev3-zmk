/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define SYM 1
#define NUM 2
#define FUN 3

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T     |                                            |  Y   |  U    |  I    |  O   |   P   | ESC  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G     |                                            |  H   |  J    |  K    |  L   |   ;   | SHFT |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B     | L SHIFT  | L SHIFT |==| LAYER 1 | L SHIFT  |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | SHIFT  |  CTRL    |   SYM   |==|   NUM   |  SPACE   | BSPC | DEL   | R-ALT |
            bindings = <
            &kp ESC   &kp Q &kp W &kp E     &kp R   &kp T                                                       &kp Y       &kp U       &kp I     &kp O   &kp P    &kp ESC
            &kp TAB   &kp A &kp S &kp D     &kp F   &kp G                                                       &kp H       &kp J       &kp K     &kp L   &kp SEMI &kp RSHFT
            &kp LSHFT &kp Z &kp X &kp C     &kp V   &kp B       &none       &none           &none   &mo FUN     &kp N       &kp M       &kp COMMA &kp DOT &kp FSLH &kp RCTRL
                                  &kp LGUI  &kp DEL &kp LSHFT   &kp LCTRL   &mo SYM         &mo NUM &kp SPACE   &kp BSPC    &kp DEL     &kp RALT
            >;
        };
        symbol_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |   !  |  @   |   #  |   $  |   %  |                                         |   ^  |   &  |   *  |  -   |  _   |      |
            // |       |      |  {   |  [   |   (  |   <  |                                         |   >  |   )  |  ]   |  }   |      |      |
            // |       |      |  ~   |  \   |   |  |      |      |      |      ==     |      |      |      |   `  |  '   |  "   |      |      |
            //                       |      |      |      |      |      |      ==     |      |      |      |      |      |
            bindings = <
            &trans &kp EXCL &kp AT      &kp HASH    &kp DOLLAR  &kp PERCENT                                     &kp CARET   &kp AMPS    &kp STAR    &kp MINUS   &kp UNDER   &trans
            &trans &trans   &kp LBRC    &kp LBKT    &kp LPAR    &kp LT                                          &kp GT      &kp RPAR    &kp RBKT    &kp RBRC    &trans      &trans
            &trans &trans   &kp TILDE   &kp BSLH    &kp PIPE    &trans    &trans &trans          &trans &trans  &trans      &kp GRAVE   &kp SQT     &kp DQT     &trans      &trans
                                        &trans      &trans      &trans    &trans &trans          &trans &trans  &trans &trans &trans
            >;
        };
        number_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |      |      |      |      |                                         |  +   |  7   |  8   |  9   |  -   |      |
            // |       |      |      |      |       |      |                                        |  =   |  4   |  5   |  6   |  0   |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |  *   |  1   |  2   |  3   |  /   |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
            &trans &trans &trans &trans &trans &trans                                       &kp KP_PLUS &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS &trans
            &trans &trans &trans &trans &trans &trans                                       &kp KP_EQUAL &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_N0 &trans
            &trans &trans &trans &trans &trans &trans &trans &trans         &trans &trans   &kp KP_MULTIPLY &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DIVIDE &trans
                                 &trans &trans &trans &trans &trans         &trans &trans   &trans &trans &trans
            >;
        };
        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
                         &trans &trans &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2              &trans &trans &trans &trans &trans &trans
            &trans &trans &trans     &bt BT_SEL 3 &bt BT_SEL 4 &trans                    &trans &trans &trans &trans &trans &trans
            &trans &trans &trans &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans &trans &trans &trans
                                 &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
                    
            >;
        };
    };
};
